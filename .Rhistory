ibrary(tidyverse)
library(lubridate)
species <- read_csv("C:/Users/Julio César/Downloads/curso R/biodiversity-in-national-parks/species.csv")
parks <- read_csv("C:/Users/Julio César/Downloads/curso R/biodiversity-in-national-parks/parks.csv")
Parq<-parks %>% select(-State) %>% filter(!is.na(`Park Name`),!is.na(Latitude))
###todas las variables que quiero cupar##
prk<-species %>% select(`Park Name`, Category, Family,`Scientific Name`,Abundance
) %>% filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(Family)
###total de spp por familia y parque##
Spp<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance
) %>% filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(
`Park Name`) %>% summarize(Total_spp=n_distinct(`Scientific Name`))
##total de spp por familia##
park<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance) %>%
filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(`Park Name`,Family) %>%
summarize(Total_spp=n_distinct(`Scientific Name`))
##total de familias por parque##
prk<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance) %>%
filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(`Park Name`) %>%
summarize(Total_Family=n_distinct(`Family`))
##total de categorías por parque##
prkCat<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance) %>%
filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(`Park Name`,`Category`) %>%
summarize(Total_spp=n_distinct(`Scientific Name`))
##tabla con coordenadas y spp
park_spp<-full_join(Parq,Spp,by="Park Name",copy=FALSE)
parque<-full_join(park_spp,prk,by="Park Name",copy=FALSE)
parkCat1<-full_join(prkCat,park_spp,by="Park Name",copy=FALSE)
#############################Abundancia###############
##total de abundancias por parque##
prkabun<-species %>% select(`Scientific Name`, Family, Category,
`Park Name`,Abundance) %>%  filter(!is.na(`Park Name`),!is.na
(Abundance),!is.na(Family),Abundance!="Abundant",
Abundance!="Unknown") %>%  group_by(`Park Name`,`Family`,Abundance) %>%
summarize(Abundancia=n_distinct(`Scientific Name`))
Parq1<-full_join(Parq,prkabun,by="Park Name",copy=FALSE)
#############################Conserv status###############
prkCons<-species %>% select(`Scientific Name`, Family, `Park Name`,`Conservation Status`) %>%
filter(!is.na(`Park Name`),!is.na(`Conservation Status`)) %>%  group_by(
`Park Name`,`Family`,`Conservation Status`) %>%
summarize(Total_Spp=n_distinct(`Scientific Name`))
Parq2<-full_join(Parq,prkCons,by="Park Name",copy=FALSE)
###############plots########################
ggplot(parkCat1, aes(x= `Park Code`, y= Total_spp, las=2))+ geom_col (
aes(fill = Category))+theme(axis.text.x=element_text(
angle = 60))
ggplot(parque,aes(x=Longitude,y=Latitude))+geom_point(aes(size=Acres))+theme_classic()
ggplot(parque,aes(x=Longitude,y=Latitude))+geom_point(aes(size=Total_spp))+theme_classic()
ggplot(parque,aes(x=Acres,y=Total_spp))+geom_point(color="blue")+geom_smooth(
method = lm,  linetype="dashed",
color="darkred")+theme_classic()
ggplot(parque,aes(x=Latitude,y=Total_spp))+geom_point(color="blue")+geom_smooth(
method = lm,  linetype="dashed",
color="darkred")+theme_classic()
#####abundancia#####
ggplot(Parq1, aes(x= `Park Code`, y=Abundancia, las=2))+ geom_col (
aes(fill = Abundance))+theme(axis.text.x=element_text(
angle = 60))
ggplot(Parq1,aes(x=Longitude,y=Latitude))+geom_point(aes(color=Abundance, size=3))+theme_classic()
library(tidyverse)
library(lubridate)
species <- read_csv("C:/Users/Julio César/Downloads/curso R/biodiversity-in-national-parks/species.csv")
parks <- read_csv("C:/Users/Julio César/Downloads/curso R/biodiversity-in-national-parks/parks.csv")
Parq<-parks %>% select(-State) %>% filter(!is.na(`Park Name`),!is.na(Latitude))
###todas las variables que quiero cupar##
prk<-species %>% select(`Park Name`, Category, Family,`Scientific Name`,Abundance
) %>% filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(Family)
###total de spp por familia y parque##
Spp<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance
) %>% filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(
`Park Name`) %>% summarize(Total_spp=n_distinct(`Scientific Name`))
##total de spp por familia##
park<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance) %>%
filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(`Park Name`,Family) %>%
summarize(Total_spp=n_distinct(`Scientific Name`))
##total de familias por parque##
prk<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance) %>%
filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(`Park Name`) %>%
summarize(Total_Family=n_distinct(`Family`))
##total de categorías por parque##
prkCat<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance) %>%
filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(`Park Name`,`Category`) %>%
summarize(Total_spp=n_distinct(`Scientific Name`))
##tabla con coordenadas y spp
park_spp<-full_join(Parq,Spp,by="Park Name",copy=FALSE)
parque<-full_join(park_spp,prk,by="Park Name",copy=FALSE)
parkCat1<-full_join(prkCat,park_spp,by="Park Name",copy=FALSE)
#############################Abundancia###############
##total de abundancias por parque##
prkabun<-species %>% select(`Scientific Name`, Family, Category,
`Park Name`,Abundance) %>%  filter(!is.na(`Park Name`),!is.na
(Abundance),!is.na(Family),Abundance!="Abundant",
Abundance!="Unknown") %>%  group_by(`Park Name`,`Family`,Abundance) %>%
summarize(Abundancia=n_distinct(`Scientific Name`))
Parq1<-full_join(Parq,prkabun,by="Park Name",copy=FALSE)
#############################Conserv status###############
prkCons<-species %>% select(`Scientific Name`, Family, `Park Name`,`Conservation Status`) %>%
filter(!is.na(`Park Name`),!is.na(`Conservation Status`)) %>%  group_by(
`Park Name`,`Family`,`Conservation Status`) %>%
summarize(Total_Spp=n_distinct(`Scientific Name`))
Parq2<-full_join(Parq,prkCons,by="Park Name",copy=FALSE)
###############plots########################
ggplot(parkCat1, aes(x= `Park Code`, y= Total_spp, las=2))+ geom_col (
aes(fill = Category))+theme(axis.text.x=element_text(
angle = 60))
ggplot(parque,aes(x=Longitude,y=Latitude))+geom_point(aes(size=Acres))+theme_classic()
ggplot(parque,aes(x=Longitude,y=Latitude))+geom_point(aes(size=Total_spp))+theme_classic()
ggplot(parque,aes(x=Acres,y=Total_spp))+geom_point(color="blue")+geom_smooth(
method = lm,  linetype="dashed",
color="darkred")+theme_classic()
ggplot(parque,aes(x=Latitude,y=Total_spp))+geom_point(color="blue")+geom_smooth(
method = lm,  linetype="dashed",
color="darkred")+theme_classic()
#####abundancia#####
ggplot(Parq1, aes(x= `Park Code`, y=Abundancia, las=2))+ geom_col (
aes(fill = Abundance))+theme(axis.text.x=element_text(
angle = 60))
ggplot(Parq1,aes(x=Longitude,y=Latitude))+geom_point(aes(color=Abundance, size=3))+theme_classic()
summary(prk)
summary(Spp)
summary(park)
parks
View(parks)
View(parkCat1)
View(parque)
summary(parque)
str(parque)
View(park)
View(prk)
View(park_spp)
View(prkCat)
ggplot(parkCat1, aes(x= `Park Code`, y= Total_spp, las=2))+ geom_col (
aes(fill = Category))+theme(axis.text.x=element_text(
angle = 60))
ggplot(parkCat1, aes(x= `Park Code`, y= Total_spp, las=2))+ geom_col (
aes(fill = Category))+theme(axis.text.x=element_text(
angle = 60))
Parq<-parks %>% select(-State) %>% filter(!is.na(`Park Name`),!is.na(Latitude))
###todas las variables que quiero cupar##
prk<-species %>% select(`Park Name`, Category, Family,`Scientific Name`,Abundance
) %>% filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(Family)
###total de spp por familia y parque##
Spp<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance
) %>% filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(
`Park Name`) %>% summarize(Total_spp=n_distinct(`Scientific Name`))
##total de categorías por parque##
prkCat<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance) %>%
filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(`Park Name`,`Category`) %>%
summarize(Total_spp=n_distinct(`Scientific Name`))
##tabla con coordenadas y spp
park_spp<-full_join(Parq,Spp,by="Park Name",copy=FALSE)
parque<-full_join(park_spp,prk,by="Park Name",copy=FALSE)
ggplot(parque, aes(x= `Park Code`, y= Total_spp, las=2))+ geom_col (
aes(fill = Category))+theme(axis.text.x=element_text(
angle = 60))
ggplot(parque, aes(x= `Park Code`, y= Total_spp, las=2))+ geom_col (
aes(fill = Category))+theme(axis.text.x=element_text(
angle = 60))
###total de spp por familia y parque##
Spp<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance
) %>% filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(
`Park Name`)
ark_spp<-full_join(Parq,Spp,by="Park Name",copy=FALSE)
parque<-full_join(park_spp,prk,by="Park Name",copy=FALSE)
parkCat1<-full_join(prkCat,park_spp,by="Park Name",copy=FALSE)
park_spp<-full_join(Parq,Spp,by="Park Name",copy=FALSE)
parque<-full_join(park_spp,prk,by="Park Name",copy=FALSE)
parkCat1<-full_join(prkCat,park_spp,by="Park Name",copy=FALSE)
###total de spp por familia y parque##
Spp<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance
) %>% filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(
`Park Name`)
park_spp<-full_join(Parq,Spp,by="Park Name",copy=FALSE)
parque<-full_join(park_spp,prk,by="Park Name",copy=FALSE)
parkCat1<-full_join(prkCat,park_spp,by="Park Name",copy=FALSE,-)
ggplot(parque, aes(x= `Park Code`, y= Total_spp, las=2))+ geom_col (
aes(fill = Category))+theme(axis.text.x=element_text(
angle = 60))
parkCat1<-full_join(prkCat,park_spp,by="Park Name",copy=FALSE)
species <- read_csv("C:/Users/Julio César/Downloads/curso R/biodiversity-in-national-parks/species.csv")
parks <- read_csv("C:/Users/Julio César/Downloads/curso R/biodiversity-in-national-parks/parks.csv")
Parq<-parks %>% select(-State) %>% filter(!is.na(`Park Name`),!is.na(Latitude))
###todas las variables que quiero cupar##
prk<-species %>% select(`Park Name`, Category, Family,`Scientific Name`,Abundance
) %>% filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(Family)
###total de spp por familia y parque##
Spp<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance
) %>% filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(
`Park Name`) %>% summarize(Total_spp=n_distinct(`Scientific Name`))
##total de spp por familia##
park<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance) %>%
filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(`Park Name`,Family) %>%
summarize(Total_spp=n_distinct(`Scientific Name`))
##total de familias por parque##
prk<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance) %>%
filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(`Park Name`) %>%
summarize(Total_Family=n_distinct(`Family`))
##total de categorías por parque##
prkCat<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance) %>%
filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(`Park Name`,`Category`) %>%
summarize(Total_spp=n_distinct(`Scientific Name`))
##tabla con coordenadas y spp
park_spp<-full_join(Parq,Spp,by="Park Name",copy=FALSE)
parque<-full_join(park_spp,prk,by="Park Name",copy=FALSE)
parkCat1<-full_join(prkCat,park_spp,by="Park Name",copy=FALSE)
#############################Abundancia###############
##total de abundancias por parque##
prkabun<-species %>% select(`Scientific Name`, Family, Category,
`Park Name`,Abundance) %>%  filter(!is.na(`Park Name`),!is.na
(Abundance),!is.na(Family),Abundance!="Abundant",
Abundance!="Unknown") %>%  group_by(`Park Name`,`Family`,Abundance) %>%
summarize(Abundancia=n_distinct(`Scientific Name`))
Parq1<-full_join(Parq,prkabun,by="Park Name",copy=FALSE)
#############################Conserv status###############
prkCons<-species %>% select(`Scientific Name`, Family, `Park Name`,`Conservation Status`) %>%
filter(!is.na(`Park Name`),!is.na(`Conservation Status`)) %>%  group_by(
`Park Name`,`Family`,`Conservation Status`) %>%
summarize(Total_Spp=n_distinct(`Scientific Name`))
Parq2<-full_join(Parq,prkCons,by="Park Name",copy=FALSE)
###############plots########################
ggplot(parque, aes(x= `Park Code`, y= Total_spp, las=2))+ geom_col (
aes(fill = Category))+theme(axis.text.x=element_text(
angle = 60))
ggplot(parque,aes(x=Longitude,y=Latitude))+geom_point(aes(size=Acres))+theme_classic()
ggplot(parque,aes(x=Longitude,y=Latitude))+geom_point(aes(size=Total_spp))+theme_classic()
ggplot(parque,aes(x=Acres,y=Total_spp))+geom_point(color="blue")+geom_smooth(
method = lm,  linetype="dashed",
color="darkred")+theme_classic()
ggplot(parque,aes(x=Latitude,y=Total_spp))+geom_point(color="blue")+geom_smooth(
method = lm,  linetype="dashed",
color="darkred")+theme_classic()
#####abundancia#####
ggplot(Parq1, aes(x= `Park Code`, y=Abundancia, las=2))+ geom_col (
aes(fill = Abundance))+theme(axis.text.x=element_text(
angle = 60))
ggplot(Parq1,aes(x=Longitude,y=Latitude))+geom_point(aes(color=Abundance, size=3))+theme_classic()
ggplot(parque, aes(x= `Park Code`, y= Total_spp, las=2))+ geom_col (
aes(fill = Category))+theme(axis.text.x=element_text(
angle = 60))
ggplot(parque,aes(x=Longitude,y=Latitude))+geom_point(aes(size=Acres))+theme_classic()
ggplot(parque,aes(x=Longitude,y=Latitude))+geom_point(aes(size=Total_spp))+theme_classic()
ggplot(parque,aes(x=Acres,y=Total_spp))+geom_point(color="blue")+geom_smooth(
method = lm,  linetype="dashed",
color="darkred")+theme_classic()
ggplot(parque,aes(x=Latitude,y=Total_spp))+geom_point(color="blue")+geom_smooth(
method = lm,  linetype="dashed",
color="darkred")+theme_classic()
##total de categorías por parque##
prkCat<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance) %>%
filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(`Park Name`,`Category`) %>%
summarize(Total_spp_categoria=n_distinct(`Scientific Name`))
parkCat1<-full_join(prkCat,park_spp,by="Park Name",copy=FALSE)
aes(fill = Category))+theme(axis.text.x=element_text(
angle = 60))
ggplot(parkCat1, aes(x= `Park Code`, y= Total_spp, las=2))+ geom_col (
aes(fill = Category))+theme(axis.text.x=element_text(
angle = 60))
ggplot(parkCat1, aes(x= `Park Code`, y= Total_spp_categoria, las=2))+ geom_col (
aes(fill = Category))+theme(axis.text.x=element_text(
angle = 60))
parkCat1<-full_join(prkCat,park_spp,by="Park Name",copy=FALSE)
View(parkCat1)
str(parkCat1)
View(park)
View(park)
View(Spp)
ggplot(parkCat1, aes(x= `Park Code`, y= Total_spp_categoria, las=2))+ geom_col (
aes(fill = Category))+theme(axis.text.x=element_text(
angle = 60))
library("tidyverse", lib.loc="~/R/win-library/3.4")
View(parque)
ggplot(Parq1, aes(x= `Park Code`, y=Abundancia, las=2))+ geom_col ()+theme(axis.text.x=element_text(
angle = 60))
ggplot(parkCat1, aes(x= `Park Code`, y= Total_spp_categoria, las=2))+ geom_col (
aes(fill = Category))+theme(axis.text.x=element_text(
angle = 60))
View(prkabun)
View(prkCat)
View(park_spp)
parkCat2<-parkCat1 %>% group_by(Category) %>% summarize(Mean = mean(Total_spp_categoria)))
parkCat2<-parkCat1 %>% group_by(Category) %>% summarize(Mean = mean(Total_spp_categoria)))$Mean`
parkCat2<-parkCat1 %>% group_by(Category) %>% summarize(Mean = mean(Total_spp_categoria))$Mean`
)
)
)
´
´´
""
species <- read_csv("C:/Users/Julio César/Downloads/curso R/biodiversity-in-national-parks/species.csv")
parks <- read_csv("C:/Users/Julio César/Downloads/curso R/biodiversity-in-national-parks/parks.csv")
Parq<-parks %>% select(-State) %>% filter(!is.na(`Park Name`),!is.na(Latitude))
###todas las variables que quiero cupar##
prk<-species %>% select(`Park Name`, Category, Family,`Scientific Name`,Abundance
) %>% filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(Family)
###total de spp por parque##
Spp<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance
) %>% filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(
`Park Name`) %>% summarize(Total_spp=n_distinct(`Scientific Name`))
prk<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance) %>%
filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(`Park Name`) %>%
summarize(Total_Family=n_distinct(`Family`))
##total de categorías por parque##
prkCat<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance) %>%
filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(`Park Name`,`Category`) %>%
summarize(Total_spp_categoria=n_distinct(`Scientific Name`))
##tabla con coordenadas y spp
park_spp<-full_join(Parq,Spp,by="Park Name",copy=FALSE)
parque<-full_join(park_spp,prk,by="Park Name",copy=FALSE)
parkCat1<-full_join(prkCat,park_spp,by="Park Name",copy=FALSE)
ggplot(parkCat1, aes(x= `Park Code`, y= Total_spp_categoria, las=2))+ geom_col (
aes(fill = Category))+theme(axis.text.x=element_text(
angle = 60))
ggplot(parque,aes(x=Longitude,y=Latitude))+geom_point(aes(size=Acres))+theme_classic()
ggplot(parque,aes(x=Longitude,y=Latitude))+geom_point(aes(size=Total_spp))+theme_classic()
ggplot(parque,aes(x=Acres,y=Total_spp))+geom_point(color="blue")+geom_smooth(
method = lm,  linetype="dashed",
color="darkred")+theme_classic()
ggplot(parque,aes(x=Latitude,y=Total_spp))+geom_point(color="blue")+geom_smooth(
method = lm,  linetype="dashed",
color="darkred")+theme_classic()
head(parque)
View(park)
View(park_spp)
View(parkCat1)
View(parks)
View(Parq)
View(Parq1)
View(Parq2)
View(prk)
View(prkabun)
View(prkCat)
View(species)
View(park_spp)
species <- read_csv("C:/Users/Julio César/Downloads/curso R/biodiversity-in-national-parks/species.csv")
parks <- read_csv("C:/Users/Julio César/Downloads/curso R/biodiversity-in-national-parks/parks.csv")
Parq<-parks %>% select(-State) %>% filter(!is.na(`Park Name`),!is.na(Latitude))
Spp<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance
) %>% filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(`Park Name`)
prk<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance) %>% filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(`Park Name`) %>%
summarize(Total_Family=n_distinct(`Family`))
prkCat<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance) %>% filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(`Park Name`,`Category`) %>% summarize(Total_spp_categoria=n_distinct(`Scientific Name`))
park_spp<-full_join(Parq,Spp,by="Park Name",copy=FALSE)
parque<-full_join(park_spp,prk,by="Park Name",copy=FALSE)
parkCat1<-full_join(prkCat,park_spp,by="Park Name",copy=FALSE)
head(park_spp)
View(park_spp)
prk<-species %>% select(`Park Name`, Category, Family,`Scientific Name`,Abundance
) %>% filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(Family)
###total de spp por parque##
Spp<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance
) %>% filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(
`Park Name`) %>% summarize(Total_spp=n_distinct(`Scientific Name`))
prk<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance) %>%
filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(`Park Name`) %>%
summarize(Total_Family=n_distinct(`Family`))
##total de categorías por parque##
prkCat<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance) %>%
filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(`Park Name`,`Category`) %>%
summarize(Total_spp_categoria=n_distinct(`Scientific Name`))
##tabla con coordenadas y spp
park_spp<-full_join(Parq,Spp,by="Park Name",copy=FALSE)
parque<-full_join(park_spp,prk,by="Park Name",copy=FALSE)
parkCat1<-full_join(prkCat,park_spp,by="Park Name",copy=FALSE)
View(park_spp)
Parq<-parks %>% select(-State) %>% filter(!is.na(`Park Name`),!is.na(Latitude))
###todas las variables que quiero cupar##
prk<-species %>% select(`Park Name`, Category, Family,`Scientific Name`,Abundance
) %>% filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(Family)
Spp<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance
) %>% filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(
`Park Name`) %>% summarize(Total_spp=n_distinct(`Scientific Name`))
park<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance) %>%
filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(`Park Name`,Family) %>%
summarize(Total_spp=n_distinct(`Scientific Name`))
prkCat<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance) %>%
filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(`Park Name`,`Category`) %>%
summarize(Total_spp_categoria=n_distinct(`Scientific Name`))
##tabla con coordenadas y spp
park_spp<-full_join(Parq,Spp,by="Park Name",copy=FALSE)
parque<-full_join(park_spp,prk,by="Park Name",copy=FALSE)
parkCat1<-full_join(prkCat,park_spp,by="Park Name",copy=FALSE)
ggplot(parkCat1, aes(x= `Park Code`, y= Total_spp_categoria, las=2))+ geom_col (
aes(fill = Category))+theme(axis.text.x=element_text(
angle = 60))
ggplot(parque,aes(x=Longitude,y=Latitude))+geom_point(aes(size=Acres))+theme_classic()
ggplot(parque,aes(x=Longitude,y=Latitude))+geom_point(aes(size=Total_spp))+theme_classic()
ggplot(parque,aes(x=Acres,y=Total_spp))+geom_point(color="blue")+geom_smooth(
method = lm,  linetype="dashed",
color="darkred")+theme_classic()
ggplot(parque,aes(x=Latitude,y=Total_spp))+geom_point(color="blue")+geom_smooth(
method = lm,  linetype="dashed",
color="darkred")+theme_classic()
parque<-full_join(park_spp,prk2,by="Park Name",copy=FALSE)
ggplot(parque,aes(x=Acres,y=Total_spp))+geom_point(color="blue")+geom_smooth(
method = lm,  linetype="dashed",
color="darkred")+theme_classic()
ggplot(parque,aes(x=Latitude,y=Total_spp))+geom_point(color="blue")+geom_smooth(
method = lm,  linetype="dashed",
color="darkred")+theme_classic()
prk2<-species %>% select(`Scientific Name`, Family, Category,`Park Name`,Abundance) %>%
filter(!is.na(`Park Name`),!is.na(Abundance)) %>% group_by(`Park Name`) %>%
summarize(Total_Family=n_distinct(`Family`))
parque<-full_join(park_spp,prk2,by="Park Name",copy=FALSE)
ggplot(parque,aes(x=Acres,y=Total_spp))+geom_point(color="blue")+geom_smooth(
method = lm,  linetype="dashed",
color="darkred")+theme_classic()
ggplot(parque,aes(x=Latitude,y=Total_spp))+geom_point(color="blue")+geom_smooth(
method = lm,  linetype="dashed",
color="darkred")+theme_classic()
View(park_spp)
View(parkCat1)
install.packages("devtools")
library("devtools", lib.loc="~/R/win-library/3.4")
devtools::install_github("")
